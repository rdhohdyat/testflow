 <div className="xl:hidden container pt-20 pb-6 px-4">
        <h1 className="text-xl font-bold mb-4 text-neutral-900">
          Python CFG Analyzer
        </h1>

        <Tabs defaultValue="code" className="w-full">
          <TabsList className="grid grid-cols-3 mb-4">
            <TabsTrigger value="code">
              <div className="flex items-center gap-1">
                <Code className="h-4 w-4" />
                <span>Editor</span>
              </div>
            </TabsTrigger>
            <TabsTrigger value="graph">
              <div className="flex items-center gap-1">
                <GitFork className="h-4 w-4" />
                <span>Graph</span>
              </div>
            </TabsTrigger>
            <TabsTrigger value="analysis">
              <div className="flex items-center gap-1">
                <ListChecks className="h-4 w-4" />
                <span>Analysis</span>
              </div>
            </TabsTrigger>
          </TabsList>

          <TabsContent value="code">
            <Card>
              <CardContent className="p-0">
                <CodeEditor />
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="graph">
            <Card className="mb-4">
              <CardHeader className="pb-2">
                <CardTitle className="text-base flex items-center justify-between">
                  <div>Control Flow Graph</div>
                  <Badge variant="secondary">
                    {nodes.length} Nodes â€¢ {edges.length} Edges
                  </Badge>
                </CardTitle>
              </CardHeader>
              <CardContent className="p-0">
                <div className="h-[60vh]">
                  <ReactFlow
                    nodes={nodes}
                    edges={edges}
                    nodeTypes={nodeTypes}
                    fitView
                  >
                    <Background
                      variant={BackgroundVariant.Dots}
                      gap={16}
                      size={1}
                    />
                    <Controls />
                  </ReactFlow>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="analysis">
            <div className="space-y-4">
              <Card>
                <CardHeader className="pb-2">
                  <CardTitle className="text-base">
                    Cyclomatic Complexity
                  </CardTitle>
                  <CardDescription>
                    {edges.length} - {nodes.length} + 2 = {cyclomaticComplexity}
                  </CardDescription>
                </CardHeader>
              </Card>

              <Card>
                <CardHeader className="pb-2">
                  <CardTitle className="text-base">Execution Paths</CardTitle>
                </CardHeader>
                <CardContent className="max-h-[200px] overflow-y-auto space-y-2">
                  <PathList />
                </CardContent>
              </Card>

              <Drawer>
                <DrawerTrigger asChild>
                  <Button className="w-full">Input Test Case</Button>
                </DrawerTrigger>
                <DrawerContent>
                  <DrawerHeader>
                    <h2 className="text-lg font-semibold">
                      {params?.length > 0
                        ? `Input Test Case (${params.join(", ")})`
                        : "Input Test Case"}
                    </h2>
                    <div className="space-y-3 mt-4">
                      {params?.length > 0 ? (
                        params?.map((param, index) => (
                          <div key={index} className="space-y-1">
                            <label className="text-sm font-medium">
                              {param}:
                            </label>
                            <Input placeholder={`Enter value for ${param}`} />
                          </div>
                        ))
                      ) : (
                        <div className="text-center py-4 text-neutral-500">
                          Generate CFG first to detect parameters
                        </div>
                      )}
                    </div>

                    <div className="mt-6 p-4 border rounded-md bg-neutral-50">
                      <h3 className="text-sm font-medium mb-1">
                        Evaluation Result:
                      </h3>
                      <p className="text-sm text-neutral-500">
                        No test case evaluated yet
                      </p>
                    </div>
                  </DrawerHeader>
                  <DrawerFooter className="gap-2">
                    <Button disabled={!params?.length}>
                      Evaluate Test Case
                    </Button>
                    <DrawerClose asChild>
                      <Button variant="outline" className="w-full">
                        Close
                      </Button>
                    </DrawerClose>
                  </DrawerFooter>
                </DrawerContent>
              </Drawer>
            </div>
          </TabsContent>
        </Tabs>
      </div>